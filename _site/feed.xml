<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-05-11T18:26:53+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Xinshao (Amos) Wang</title><subtitle>&quot;Stay Hungry. Stay Foolish. -- Steve Jobs 2005&quot;. ML/DL/AI Research with applications to CV/NLP, etc
</subtitle><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><entry><title type="html">Paper Summary on Distance Metric, Representation Learning</title><link href="http://localhost:4000/blogs/2020-04-23-deep-metric-learning/" rel="alternate" type="text/html" title="Paper Summary on Distance Metric, Representation Learning" /><published>2020-04-23T00:00:00+01:00</published><updated>2020-04-23T00:00:00+01:00</updated><id>http://localhost:4000/blogs/deep-metric-learning</id><content type="html" xml:base="http://localhost:4000/blogs/2020-04-23-deep-metric-learning/">:+1: means being highly related to my personal research interest. 
0. [arXiv 2020-On the Fairness of Deep Metric Learning](#arxiv-2020)
0. [ICCV 2019, CVPR 2020 Deep Metric Learning](#iccv-2019-cvpr-2020-deep-metric-learning)
0. [CVPR 2019 Deep Metric Learning](#cvpr-2019-deep-metric-learning)
0. [Few-shot Learning](#few-shot-learning)
0. [Large Output Spaces](#large-output-spaces)
0. [Poincaré, Hyperbolic, Curvilinear](#poincaré-hyperbolic-curvilinear)
0. [Wasserstein](#wasserstein)
0. [Semi-supervised or Unsupervised Learning](#semi-supervised-or-unsupervised-learning)
0. [NeurIPS 2019-Stochastic Shared Embeddings: Data-driven Regularization of Embedding Layers](#neurips-2019-stochastic-shared-embeddings-data-driven-regularization-of-embedding-layers)
{:.message}


## arXiv 2020
* [Revisiting Training Strategies and Generalization Performance in Deep Metric Learning-Karsten Roth et al](https://arxiv.org/pdf/2002.08473.pdf)
    * Deep Metric Learning (DML) is arguably one of
the most influential lines of research for learning visual similarities with many proposed approaches every year. Although the field benefits
from the rapid progress, the divergence in training
protocols, architectures, and parameter choices
make an unbiased comparison difficult. To provide a consistent reference point, we revisit the
most widely used DML objective functions and
conduct a study of the crucial parameter choices
as well as the commonly neglected mini-batch
sampling process. Based on our analysis, we uncover a correlation between the embedding space
compression and the generalization performance
of DML models. Exploiting these insights, we
propose a simple, yet effective, training regularization to reliably boost the performance of rankingbased DML models on various standard benchmark datasets. 
    * We propose a simple technique to regularize the embedding space compression
which we find to boost generalization performance of
ranking-based DML approaches.

* [Unbiased Evaluation of Deep Metric Learning Algorithms--Istvan Feh ´ erv ´ ari etal 2019](https://arxiv.org/pdf/1911.12528.pdf)
    * we perform an unbiased comparison of
the most popular DML baseline methods under same conditions and more importantly, not obfuscating any hyper
parameter tuning or adjustment needed to favor a particular method. We find, that under equal conditions several
older methods perform significantly better than previously
believed.
    * In this work, **it stated &quot;On the SOP dataset, we never managed to make this algorithm converge.&quot; using [Ranked List Loss](https://arxiv.org/abs/1903.03238).** 
        * This is not the fact: I thank their interest in our work, which is a great motivation for me and my collaborators. I appreciate their report on the difficulty of applying our method.
        * Please see [Ranked List Loss](https://arxiv.org/abs/1903.03238) for its improved results, and [Github page](https://github.com/XinshaoAmosWang/Ranked-List-Loss-for-DML) for reproducible results.  

* [A Metric Learning Reality Check--Kevin Musgrave, Serge Belongie, Ser-Nam Lim](https://arxiv.org/pdf/2003.08505.pdf)
{:.message}

## ICCV 2019, CVPR 2020 Deep Metric Learning
* [Mic: Mining interclass characteristics for improved metric learning-Karsten Roth∗ , Biagio Brattoli⋆ , Bjorn Ommer](http://openaccess.thecvf.com/content_ICCV_2019/papers/Roth_MIC_Mining_Interclass_Characteristics_for_Improved_Metric_Learning_ICCV_2019_paper.pdf)
    * The common approach to metric learning is to **enforce a representation that is invariant under all factors but the ones of interest.** (Very Common Practice)
    * In contrast, we propose to **explicitly learn the latent characteristics that are shared by and go across object classes**. We can then directly explain away structured visual variability, rather than assuming it to be unknown random noise. (Being Contrastive is Interesting! =&gt; Regularisation Technique?)
    * We propose a novel surrogate task to learn visual characteristics shared across classes with a separate encoder. This encoder is trained jointly with the encoder for class information by reducing their mutual information.
    * ResNet-50 + PyTorch
    * Complex methods for me:  **The number of clusters is set before training to a fixed, problem-specific value**: 30 for CUB200-2011 [37], 200 for CARS196 [19], 50 for Stanford Online Products [28], 150 for In-Shop Clothes [43] and 50 for PKU VehicleID [21]. We update the cluster labels every other epoch.
    * For all experiments, we use the original images without bounding boxes.


* [Cross-Batch Memory for Embedding Learning-Xun Wang∗ , Haozhi Zhang∗ , Weilin Huang†, Matthew R. Scott](https://arxiv.org/pdf/1912.06798.pdf)
    * We propose a cross-batch memory (XBM) mechanism that memorizes the embeddings of past iterations, allowing the model to collect sufficient hard negative pairs across multiple minibatches - even over the whole dataset.
    * GoogLeNet V1, V2 and ResNet-50
    
* [SoftTriple Loss: Deep Metric Learning Without Triplet Sampling, Qian, Qi and Shang, Lei and Sun, Baigui and Hu, Juhua and Li, Hao and Jin, Rong](http://openaccess.thecvf.com/content_ICCV_2019/papers/Qian_SoftTriple_Loss_Deep_Metric_Learning_Without_Triplet_Sampling_ICCV_2019_paper.pdf)
    
    * **Multiple Centers or Adaptive Number of Centers =&gt; Softmax Loss** 
    
    * Analogous to  ProxyNCA or ProxyTriplet 
    
    * **Considering that images in CUB-2011 and Cars196 are similar to those in ImageNet, we freeze BN on these two data sets and keep BN training on the rest one.** Embeddings of examples and centers have the unit length in the experiments. 
    
    * Backbone: GoogLeNet V2 (Inception with BN)
    
    * During training, only random horizontal mirroring and random crop are used as the data augmentation. A single center crop is taken for test.
    
    * CUB-2011: We note that different works report the results with different dimension of embeddings while the size of embeddings has a significant impact on the performance. **For fair comparison, we report the results for the dimension of 64, which is adopted by many existing methods and the results with 512 feature embeddings, which reports the state-of-the-art results on most of data sets.**
    
    * Prior Work: ProxyNCA

* [Circle Loss: A Unified Perspective of Pair Similarity Optimization](https://arxiv.org/pdf/2002.10857.pdf)
    *  Motivation: aiming to maximize the within-class similarity $$s_p$$ and minimize the between-class similarity $$s_n$$. We find a majority of loss functions, including the triplet loss and the softmax plus cross-entropy loss, embed $$s_n$$ and $$s_p$$ into similarity pairs and seek to reduce $$(s_n − s_p)$$. Such an optimization manner is inflexible, because the penalty strength on every single similarity score is restricted to be equal. 
    * Our intuition is that if a similarity score deviates far from the optimum, it should be emphasized.
    * we simply re-weight each similarity to highlight the less-optimized similarity scores. It results in a Circle loss, which is named due to its circular decision boundary. 
    *  Circle loss offers a more flexible optimization approach towards a more definite convergence target,
compared with the loss functions optimizing $$(s_n − s_p)$$.
    * (1)  a unified loss function; (2) flexible optimization; (3) definite convergence status. 
    * Evaluation:
        * Tasks: 
            * Face recognition 
            * Person re-identification (Market-1501,MSMT17)
            * Fine-grained image retrieval (CUB-100-2011, CARS-196, SOP-11318)

        * Net architecture-1: ResNet50 (globla) + MGN (local features) for person reid (. Our implementation concatenates all the part features into a single feature vector for simplici);

        * Net architecture-2: GoogLeNet (BN-Inception) for CUB, CARS, SOP, 512-D embeddings;
    
    * The performance is not better than Ranked List Loss on SOP. 
    
* [Sampling Wisely: Deep Image Embedding by Top-k Precision Optimization](http://openaccess.thecvf.com/content_ICCV_2019/papers/Lu_Sampling_Wisely_Deep_Image_Embedding_by_Top-K_Precision_Optimization_ICCV_2019_paper.pdf)
    * This work is partially inspired by our work: Ranked List Loss, CVPR 2019
    * In contrast, in this paper, we propose a novel deep image embedding algorithm with end-to-end optimization to top-k precision, the evaluation metric that is **closely related to user experience.**
    * Specially, our loss function is constructed with **Wisely Sampled “misplaced” images along the top-k nearest neighbor decision boundary,** so that the gradient descent update directly
promotes the concerned metric, top-k precision.
    * **Our theoretical analysis** on the upper bounding and consistency properties of the proposed loss supports that minimizing our proposed loss is equivalent to maximizing top-k precision
    * Evaluation:
        * Datasets: CUB-200-2011, CARS-196, SOP 
        * PyTorch + Adam
        * Net architecture: Densenet 201, GoogLeNet V2 (Inception with BN)
        * Finetuning
        * Embedding size: 64, 512? 
        * Input size: warp (256x256) =&gt; crop (227x227)
        * Testing: only center crop
    * The performance is not better than Ranked List Loss
{:.message}

## CVPR 2019 Deep Metric Learning 
* [Divide and Conquer the Embedding Space for Metric Learning](http://openaccess.thecvf.com/content_CVPR_2019/papers/Sanakoyeu_Divide_and_Conquer_the_Embedding_Space_for_Metric_Learning_CVPR_2019_paper.pdf) 
:+1:  
    * ResNet-50
    * Each learner will learn a separate distance metric using only a subspace of the original embedding space and **a part of the data**. 

    * Natural hard negatives mining: Finally, **the splitting and sampling connect to hard negative mining**, which is verified by them. (I appreciate this ablation study in Table 6 )
    * Divide means: 
    (1) Splitting the training data into K Clusters; 
    (2) Splitting the embedding into K Slices.  


* [Deep Metric Learning to Rank=FastAP](http://openaccess.thecvf.com/content_CVPR_2019/papers/Cakir_Deep_Metric_Learning_to_Rank_CVPR_2019_paper.pdf) :+1:
    * ResNet-18 &amp; ResNet-50
    * Our main contribution is a novel solution to optimizing Average Precision under the Euclidean metric, based on the probabilistic interpretation of AP as the area under precision-recall curve, as well as distance quantization.
    * We also propose a category-based minibatch sampling strategy and a large-batch training heuristic.
    * On three **few-shot image retrieval datasets**, FastAP consistently outperforms competing methods, which often involve complex optimization heuristics or costly model ensembles.


* [Multi-Similarity Loss With General Pair Weighting for Deep Metric Learning](http://openaccess.thecvf.com/content_CVPR_2019/papers/Wang_Multi-Similarity_Loss_With_General_Pair_Weighting_for_Deep_Metric_Learning_CVPR_2019_paper.pdf) :+1:
    * Objective of the proposed multi-similarity loss, which aims to collect informative pairs, and weight these pairs through their own and relative similarities.
    * GoogLeNet V2 (Inception BN)


* [Ranked List Loss for Deep Metric Learning](https://arxiv.org/pdf/1903.03238.pdf) :+1:
    * GoogLeNet V2 (Inception BN)

* [Stochastic Class-Based Hard Example Mining for Deep Metric Learning](http://openaccess.thecvf.com/content_CVPR_2019/papers/Suh_Stochastic_Class-Based_Hard_Example_Mining_for_Deep_Metric_Learning_CVPR_2019_paper.pdf) :+1:
    * Inception V1
    * Scale linearly to the number of classes. 
    * The methods proposed by Movshovitz-Attias et al. [14] and Wen et al. [34] are related to ours in a sense that class representatives are jointly trained with the feature extractor. 
However, their goal is to formulate new losses using the class representatives whereas we use them for hard negative mining.
    * Given an anchor instance, our algorithm first selects a few hard negative classes based on the class-to-sample distances and then performs a refined search in an instance-level only from the selected classes.

* A Theoretically Sound Upper Bound on the Triplet Loss for Improving the Efficiency of Deep Distance Metric Learning :+1:

* **Unsupervised** Embedding Learning via Invariant and Spreading Instance Feature :+1:


* [Signal-To-Noise Ratio: A Robust Distance Metric for Deep Metric Learning](http://openaccess.thecvf.com/content_CVPR_2019/papers/Yuan_Signal-To-Noise_Ratio_A_Robust_Distance_Metric_for_Deep_Metric_Learning_CVPR_2019_paper.pdf) :+1:

    * We propose a robust SNR distance metric based on Signal-to-Noise Ratio (SNR) for measuring the similarity of image pairs for deep metric learning. Compared with Euclidean distance metric, our SNR distance metric can further jointly reduce the intra-class distances and enlarge the inter-class distances for learned features.
    * SNR in signal processing is used to measure the level of a desired signal to the level of noise, and a larger SNR value means a higher signal quality.
    For similarity measurement in deep metric learning, a pair of learned features x and y can be given as y = x + n, where n can be treated as a noise. Then, the SNR is the ratio of the feature variance and the noise variance.
    * To show the generality of our SNR-based metric, we also extend our approach to hashing retrieval learning.


* [Spectral Metric for Dataset Complexity Assessment](http://openaccess.thecvf.com/content_CVPR_2019/papers/Branchaud-Charron_Spectral_Metric_for_Dataset_Complexity_Assessment_CVPR_2019_paper.pdf) :+1:

    * Related work: [Measuring the Intrinsic Dimension of Objective Landscapes ICLR 2018](https://openreview.net/forum?id=ryup8-WCW), 
    [How Complex is your classification problem? A survey on measuring classification complexity Survey on complexity measures](https://arxiv.org/abs/1808.03591)


* Deep Asymmetric Metric Learning via Rich Relationship Mining :+1:
    * DAMLRRM relaxes the constraint on positive pairs to extend the generalization capability. We build positive pairs training pool by constructing a minimum connected tree for each category instead of considering all positive pairs within a mini-batch. As a result, there will exist a direct or indirect path between any positive pair, which ensures the relevance being bridged to each other. The inspiration comes from ranking on manifold [58] that spreads the relevance to their nearby neighbors one by one.
    * Idea is novel. The results on SOP are not good, only 69.7 with GoogLeNet



* [Hybrid-Attention Based Decoupled Metric Learning for Zero-Shot Image Retrieval](http://openaccess.thecvf.com/content_CVPR_2019/papers/Chen_Hybrid-Attention_Based_Decoupled_Metric_Learning_for_Zero-Shot_Image_Retrieval_CVPR_2019_paper.pdf) :-1:
    * Very complex: object attention, spatial attention, random walk graph, etc.

* [Deep Metric Learning Beyond Binary Supervision](https://arxiv.org/pdf/1904.09626.pdf) :-1:
    * Binary supervision indicating whether a pair of images are of the same class or not.
    * Using continuous labels
    * Learn the degree of similarity rather than just the order.
    * A triplet mining strategy adapted to metric learning with continuous labels.
    * Image retrieval tasks with continuous labels in terms of human poses, room layouts and image captions.

* Hardness-aware deep metric learning 
:-1: : data augmentation

* Ensemble Deep Manifold Similarity Learning using Hard Proxies :-1: random walk algorithm, ensemble models.

* Re-Ranking via Metric Fusion for Object Retrieval and Person Re-Identification :-1:

* Deep Embedding Learning With Discriminative Sampling Policy :-1:
* Point Cloud Oversegmentation With Graph-Structured Deep Metric Learning :-1: 
* Polysemous Visual-Semantic Embedding for Cross-Modal Retrieval :-1:
* A Compact Embedding for Facial Expression Similarity :-1:
* [RepMet: Representative-Based Metric Learning for Classification and Few-Shot Object Detection](http://openaccess.thecvf.com/content_CVPR_2019/papers/Karlinsky_RepMet_Representative-Based_Metric_Learning_for_Classification_and_Few-Shot_Object_Detection_CVPR_2019_paper.pdf) :-1:
* Eliminating Exposure Bias and Metric Mismatch in Multiple Object Tracking :-1:
{:.message}

## [Few-shot Learning](/my_docs/few-shot/) 
* ICLR 2018-Meta-Learning for Semi-Supervised Few-Shot Classification
* NeurIPS 2019-Unsupervised Meta Learning for Few-Show Image Classification
* NeurIPS 2019-Learning to Self-Train for Semi-Supervised Few-Shot Classification
* NeurIPS 2019-Adaptive Cross-Modal Few-shot Learning
* NeurIPS 2019-Cross Attention Network for Few-shot Classification
* NeurIPS 2019-Incremental Few-Shot Learning with Attention Attractor Networks
* ICML 2019-LGM-Net: Learning to Generate Matching Networks for Few-Shot Learning
{:.message}

## [Large Output Spaces](/my_docs/large-output-spaces/)
* NeurIPS 2019-Breaking the Glass Ceiling for Embedding-Based Classifiers for Large Output Spaces
* AISTATS 2019-Stochastic Negative Mining for Learning with Large Output Spaces
{:.message}

## [Poincaré, Hyperbolic, Curvilinear](/my_docs/Poincare-Hyperbolic-Curvilinear/)
* NeurIPS 2019-Multi-relational Poincaré Graph Embeddings
* NeurIPS 2019-Numerically Accurate Hyperbolic Embeddings Using Tiling-Based Models
* NeurIPS 2019-Curvilinear Distance Metric Learning
{:.message}



## [Wasserstein](/my_docs/wasserstein/)
* NeurIPS 2019-Generalized Sliced Wasserstein Distances 
* NeurIPS 2019-Tree-Sliced Variants of Wasserstein Distances
* NeurIPS 2019-Sliced Gromov-Wasserstein
* NeurIPS 2019-Wasserstein Dependency Measure for Representation Learning
{:.message}


## [Semi-supervised or Unsupervised Learning](/my_docs/Semi-Un-Supervised-Learning/)
* CVPR 2019-Label Propagation for Deep Semi-supervised Learning
* NeurIPS 2017-Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results
* ICLR 2019-Unsupervised Learning via Meta-Learning
{:.message}




## [NeurIPS 2019-Stochastic Shared Embeddings: Data-driven Regularization of Embedding Layers](https://arxiv.org/pdf/1905.10630.pdf)
**NOTE**: 
In deep neural nets, lower level embedding layers account for a large portion of the total number of parameters.**Tikhonov regularization, graph-based regularization, and hard parameter sharing are approaches that introduce explicit biases into training in a hope to reduce statistical complexity.** Alternatively, we propose stochastically shared embeddings (SSE), a data-driven approach to regularizing embedding layers, which stochastically transitions between embeddings during stochastic gradient descent (SGD). Because SSE integrates seamlessly with existing SGD algorithms, it can be used with only minor modifications when training large scale neural networks. We develop two versions of SSE: SSE-Graph using knowledge graphs of embeddings; SSE-SE using no prior information. We provide theoretical guarantees for our method and show its empirical effectiveness on 6 distinct tasks, from simple neural networks with one hidden layer in recommender systems, to the transformer and BERT in natural languages. **We find that when used along with widely-used regularization methods such as weight decay and dropout, our proposed SSE can further reduce overfitting, which often leads to more favorable generalization results.** &lt;br /&gt;
We conducted **experiments for a total of 6 tasks from simple neural networks with one hidden layer in recommender systems, to the transformer and BERT in natural languages.** 
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">:+1: means being highly related to my personal research interest. arXiv 2020-On the Fairness of Deep Metric Learning ICCV 2019, CVPR 2020 Deep Metric Learning CVPR 2019 Deep Metric Learning Few-shot Learning Large Output Spaces Poincaré, Hyperbolic, Curvilinear Wasserstein Semi-supervised or Unsupervised Learning NeurIPS 2019-Stochastic Shared Embeddings: Data-driven Regularization of Embedding Layers</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/steve-harvey.jpg" /></entry><entry><title type="html">Paper Summary on Label Manipulation, Output Regularisation (Optimisation tricks)</title><link href="http://localhost:4000/blogs/2020-04-09-label-manipulation/" rel="alternate" type="text/html" title="Paper Summary on Label Manipulation, Output Regularisation (Optimisation tricks)" /><published>2020-04-09T00:00:00+01:00</published><updated>2020-04-09T00:00:00+01:00</updated><id>http://localhost:4000/blogs/label-manipulation</id><content type="html" xml:base="http://localhost:4000/blogs/2020-04-09-label-manipulation/">:+1: means being highly related to my personal research interest. 
0. [Label Smoothing](#label-smoothing)
0. [Confidence Penalty](#)
0. [Label Correction](#)
0. [Example Weighting](#)
0. [Know the unknown](#know-the-unknown)
0. [Semi-supervised learning](#)

[Related Notes](../2020-02-14-Core-machine-learning-topics/#knowledge-distillation)
{:.message}

## Experiments
* [ICLR 2020 Discussion](https://openreview.net/forum?id=SJxyOhVtvB)
* 
{:.message}


## Know the unknown and open-set noise
* 
{:.message}

## Label Smoothing
* [Does label smoothing mitigate label noise?- Michal Lukasik, Srinadh Bhojanapalli, Aditya Krishna Menon and Sanjiv Kumar](https://arxiv.org/pdf/2003.02819.pdf)
    * **The definition of LS:** Label smoothing is commonly used in training deep learning models, wherein one-hot training labels are mixed with uniform label vectors.

    * While **label smoothing apparently amplifies this problem — being equivalent to injecting symmetric noise to the labels** — we show how it relates to a general family of loss-correction techniques from the label noise literature. Building on this connection, we show that label smoothing is competitive with loss-correction under label noise. 
        * **Do you agree with this?** 

    * Further, we show that when distilling models from noisy data, label smoothing of the teacher is beneficial; this is in contrast to recent findings for noise-free problems, and sheds further light on settings where label smoothing is beneficial.
    
    * Interestingly, there are two competing intuitions. On the one hand, smoothing might mitigate the problem, as it **prevents overconfidence on any one example**. On the other hand, smoothing might accentuate the problem, as it is **equivalent to injecting uniform noise into all labels** [ DisturbLabel Xie et al., 2016].

    * **At first glance, this connection indicates that smoothing has an opposite effect to one such loss-correction technique.** However, we **empirically show that smoothing is competitive with such techniques in denoising**, and that it improves performance of distillation.
        * we present a novel connection of label smoothing to loss correction techniques from the label noise literature;
        * We empirically demonstrate that label smoothing significantly improves performance under label noise, which we explain by relating smoothing to l2 regularisation. 
        * we show that when distilling from noisy labels, smoothing the teacher improves the student. While Müller et al. [2019] established that label smoothing can harm distillation, we show an opposite picture in noisy settings.

* [Does label smoothing mitigate label noise?- Label smoothing meets loss correction](https://arxiv.org/pdf/2003.02819.pdf)
    * 

* [DisturbLabel: Regularizing CNN on the Loss Layer-CVPR 2016-Lingxi Xie, Jingdong Wang, Zhen Wei, Meng Wang, Qi Tian](https://arxiv.org/pdf/1605.00055.pdf)
    * Randomly replaces a part of labels as incorrect values in each iteration.

    * In each training iteration, DisturbLabel randomly selects a small subset of samples (from those in the current mini-batch) and randomly sets their ground-truth labels to be incorrect, which results in a noisy loss function and, consequently, noisy gradient back-propagation.

    * DisturbLabel works on each mini-batch independently.

* [Rethinking the inception architecture for computer vision-CVPR 2016 Szegedy, C., Vanhoucke, V., Ioffe, S., Shlens, J., Wojna, Z](https://arxiv.org/pdf/1512.00567.pdf)
    * Model Regularization via Label Smoothing
    * LS is firstly proposed in this paper. 

* [Distilling the knowledge in a neural network-NeurIPS 2015 Workshop-Hinton, G., Vinyals, O., Dean, J](https://arxiv.org/pdf/1503.02531.pdf)
    
    * **Soft targets definition**: An obvious way to transfer the generalization ability of the cumbersome model to a small model is
    to **use the class probabilities produced by the cumbersome model as “soft targets” for training the small model.**

    * **More information and less variance**: When the soft targets have high entropy, they provide **much more information** per training case than hard targets and **much less variance in the gradient between training cases**, so the small model can often be trained on much    less data than the original cumbersome model and using a much higher learning rate.

    * **Why?**: 
        * **Feasibility**: **Caruana and his collaborators [1]** have shown that it is possible to
        compress the knowledge in an ensemble into a single model which is much easier to deploy and we develop this approach further using a different compression technique.
        * For tasks like MNIST in which the cumbersome model almost always produces the correct answer with very high confidence, much of the information about the learned function resides in the ratios of very small probabilities in the soft targets. For example, one version of a 2 may be given a probability of 10−6 of being a 3 and 10−9 of being a 7 whereas for another version it may be the other way around. 
        * **Relative Probabilities?** This is valuable information that defines a rich similarity structure over the data (i. e. it says which 2’s look like 3’s and which look like 7’s) but it has very little influence on the cross-entropy cost function during the transfer stage because **the probabilities are so close to zero.** 

        * **Matching Logits?**: **Caruana and his collaborators** circumvent this problem by **using the logits (the inputs to the final softmax) rather than the probabilities produced by the softmax as the targets** for learning the small model and they minimize the squared difference between the logits produced by the cumbersome model and the logits produced by the small model.
    
    * **Distillation Definition**: 
        * Our more general solution, called “distillation”, is to **raise the temperature of the final softmax until the cumbersome model produces a suitably soft set of targets**. We then use the same high temperature when training the small model to match these soft targets. We show later that matching the logits of the cumbersome model is actually a special case of distillation.
        * we call “distillation” to transfer the knowledge from the cumbersome model to a small model that is more suitable for deployment.
    
    * **Why Temperature?** =&gt; **Matching Logits is a special case of distillaiton?**
        * Using a higher value for T produces a softer probability distribution over classes.
        

    * **Knowledge Definition**: 
        * Relative probabilities: For cumbersome models that learn to discriminate between a large number of classes, the normal training objective is to maximize the average log probability of the correct answer, but a side-effect of the learning is that **the trained model assigns probabilities to all of the incorrect answers and even when these probabilities are very small**, **some of them are much larger than others**. **The relative probabilities of incorrect answers** tell us a lot about how the cumbersome model tends to generalize.
        
    * **Training Data**: The transfer set that is used to train the small model could consist entirely of unlabeled data [1] or we could use the original training set.  
        * We have found that using the original training set works well, especially if we add a small term to the objective function that encourages the small model to predict the true targets as well as matching the soft targets provided by the cumbersome model.

    * **Case Analysis**
        * In the simplest form of distillation: knowledge is transferred to the distilled model by training it on a transfer set and using a soft target distribution for each case in the transfer set that is produced by using the cumbersome model with a high temperature in its softmax. The same high temperature is used when training the distilled model, but after it has been trained it uses a temperature of 1.
        * **Two objectives: matching correct labels and soft targets generated by a cumbersome model**: When the correct labels are known for all or some of the transfer set, this method can be significantly improved by also training the distilled model to produce the correct labels. One way to do this is to use the correct labels to modify the soft targets, but we found that a better way is to simply use a weighted average of two different objective functions.
        * Matching logits is a special case of distillation? **Matching softer probabilities produced with high temperature versus matching logits!**
{:.message}

## Entropy Minimization (Minimum Entropy Principle)
* [Semi-supervised Learning by Entropy Minimization-NeurIPS 2015-Yves Grandvalet, Yoshua Bengio](https://papers.nips.cc/paper/2740-semi-supervised-learning-by-entropy-minimization.pdf)
    * We consider the **semi-supervised learning problem**, where a decision rule is to be learned from labeled and unlabeled data. 
    * A series of experiments illustrates that the proposed solution **benefits from unlabeled data**.
    * The method challenges **mixture models** when the data are sampled from the **distribution class spanned by the generative model**. The performances are definitely in favor of minimum entropy regularization when generative models are misspecified, and the weighting of unlabeled data provides robustness to the violation of the “cluster assumption”. 

    * Finally, we also illustrate that the method can also be far superior to manifold learning in high dimension spaces.
* 
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">:+1: means being highly related to my personal research interest. Label Smoothing Confidence Penalty Label Correction Example Weighting Know the unknown Semi-supervised learning</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/steve-harvey.jpg" /></entry><entry><title type="html">Example Weighting, Importance Sampling?</title><link href="http://localhost:4000/blogs/2020-03-08-example-weighting/" rel="alternate" type="text/html" title="Example Weighting, Importance Sampling?" /><published>2020-03-08T00:00:00+00:00</published><updated>2020-03-08T00:00:00+00:00</updated><id>http://localhost:4000/blogs/example-weighting</id><content type="html" xml:base="http://localhost:4000/blogs/2020-03-08-example-weighting/">0. [Importance sampling](#importance-samplinggradient)
{:.message}


### Importance sampling--Gradient?
* [Not All Samples Are Created Equal: Deep Learning with Importance Sampling-Angelos Katharopoulos et al](http://proceedings.mlr.press/v80/katharopoulos18a.html)

* [Stochastic Optimization with Importance Sampling for Regularized Loss Minimization-Peilin Zhao, Tong Zhang](http://proceedings.mlr.press/v37/zhaoa15.pdf)

* [Stochastic Optimization with Importance Sampling-Peilin Zhao et al](https://arxiv.org/pdf/1401.2753.pdf)

* [Importance Sampling for Minibatches-Dominik Csiba et al](http://www.jmlr.org/papers/volume19/16-241/16-241.pdf)

* [Safe Adaptive Importance Sampling-Sebastian U. Stich et al](https://papers.nips.cc/paper/7025-safe-adaptive-importance-sampling.pdf)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">Importance sampling</summary></entry><entry><title type="html">I Love Learning and Applying Mathematics, Statistics!</title><link href="http://localhost:4000/blogs/2020-03-04-I-love-math/" rel="alternate" type="text/html" title="I Love Learning and Applying Mathematics, Statistics!" /><published>2020-03-04T00:00:00+00:00</published><updated>2020-03-04T00:00:00+00:00</updated><id>http://localhost:4000/blogs/I-love-math</id><content type="html" xml:base="http://localhost:4000/blogs/2020-03-04-I-love-math/">0. [SGD &amp; Newton's Method &amp; Second-order Derivative Optimisation](#sgd--newtons-method--second-order-derivative-optimisation)
0. [Linear algebra](#linear-algebra)
0. [Probabilistic view of the world](#probabilistic-view-of-the-world)
0. [Optimisation](#optimisation)
{:.message}

### SGD &amp; Newton's Method &amp; Second-order Derivative Optimisation
* [Newton's Method](https://en.wikipedia.org/wiki/Newton%27s_method)
* [Newton's Method: Second-order Derivative Optimisation](https://en.wikipedia.org/wiki/Newton%27s_method_in_optimization)


### Linear algebra
* [Properties of the Covariance Matrix](http://www.robots.ox.ac.uk/~davidc/pubs/tt2015_dac1.pdf)
* [Covariance and Correlation](https://www.mathsisfun.com/data/correlation.html)
    * Interpreting: **Variable = Axis**
        * Variable = axis/component/one hyper-line
        * Observations of this variable = points of this axis/hyper-line
        * The observations of a variable = one vector of points in this line.
        * $$E(XY)=$$ the dot product of two variables' observation vector (multiple points for each variable) 
        * If $$X,Y$$ are orthogonal, then for any point in $$X$$ and any point in $$Y$$, their dot product are zero, therefore, we have $$E(XY) = 0$$.  
        * Diagonalisation (Orthogonal, Making them independent) =&gt;  Decorrelation
            * In this context, uncorrelation = independence. 
    * Uncorrelation (Orthogonalisaion) using Eigen vectors 
        * **Projection of a normal distribtion** $$ X \sim \mathcal{N}(0,\,{\sigma_x}^2)$$ to a standard normal distribution $$ \mathcal{N}(0,\,1)$$: 
            * **the projected distribution** is $$\mathcal{N}(0,\,\{\cos(\theta) \times \sigma_x \times 1\}^2)$$
            * $$\theta$$ determines their linear dependency: correlation coefficient=$$\cos(\theta)$$. 
        * For each eigen vector: **we project all the original variables to this eigen vector** (an axis in the transformed orthogonal space) =&gt; summarise/accumulate those projected variables in this axis =&gt; New variable 

            * Two accumulated projected new variables of two axises (eigen vectors) are uncorrelated (being independent now).

            * Eigen value = sum of projected standard deviation.

    * The number of variables, the number of observations, the number of axises/components
        * The number of variables = the number of axis. 
        * When the number of variables (feature dim) &gt; the number of observations? 

    * In a high-dimensional space with orthogonal axises: 
        * Each axis is one independent event/variable. (Without losing generality, feel free to treat it as an unit normal distribution $$~\sim \mathcal{N}(0,\,1)$$) 
        * **The sum of two independent normal random variables is also normal.** However, if the two normal random variables are not independent, then their sum is not necessarily normal.
        * Then, the whole space becomes the combination (summarisation) of multiple independent normal random variables. 
        
        * In this context, **uncorrelation = independence.**
        Independent variables = indepdent axis/components = orthogonal components.

    * Covariance: 
        * remove mean for each axis/variable 
        * projection (accumulation/expectation of dot product of observations from different axis/variable)
        * In other words, dot product of two points (dim &gt;= 2) from two axises (out of multiple axises) =&gt; expectation/accumulation
    * **Dot product of two variable/axis**
    * Correlation = $$\frac{Covariance(X_i, X_j)} { \sigma_i \times \sigma_j } \in [-1, 1]$$ 
    * For easier and intuitive understanding, looking at $$\frac{(X_i - E(X_i))} { \sigma_i } \sim \mathcal{N}(0,\,1) = \mathbf{e}_i$$ and $$\frac{(X_j - E(X_j))} { \sigma_j } \sim \mathcal{N}(0,\,1) = \lambda\mathbf{e}_i + \sqrt{(1-\lambda^2)} \mathbf{e}_j$$
        * $$\mathbf{e}_i \sim \mathcal{N}(0,\,1)$$, $$\mathbf{e}_j \sim \mathcal{N}(0,\,1)$$
        * $$\mathbf{e}_i \text{ and } \mathbf{e}_j $$ are two variables in two orthogonal axises. 
        * Correlation = $$\lambda \in [-1, 1]$$  
        * Covariance = $$\lambda \sigma_i \sigma_j$$ 
        * $$
\begin{aligned}
  E\{\frac{(X_i - E(X_i))} { \sigma_i }  \frac{(X_j - E(X_j))} { \sigma_j } \} &amp;= E\{ \mathbf{e}_i \cdot \lambda\mathbf{e}_i + \sqrt{(1-\lambda^2)} \mathbf{e}_j \} \\
  &amp;= \lambda E\{ \mathbf{e}_i \cdot \mathbf{e}_i  \} + \sqrt{(1-\lambda^2)} E\{ \mathbf{e}_i \cdot \mathbf{e}_j \} \\
  &amp;= \lambda .
\end{aligned}$$
        * $$
        \begin{aligned}
  E\{ {(X_i - E(X_i))}  \cdot {(X_j - E(X_j))}  \} =  \lambda  \sigma_i  \sigma_j.
    \end{aligned}
    $$
* [Correlation and dependence -1](https://en.wikipedia.org/wiki/Correlation_and_dependence#Correlation_and_independence)
    * Correlation and dependencd are totally different concepts/terms for discribing two random variables. 
    * **In the special case** when $${\displaystyle X}$$ and $${\displaystyle Y}$$ are jointly normal, uncorrelatedness is equivalent to independence.
* [Correlation and dependence-2-Bivariate Normal Distribution](https://www.probabilitycourse.com/chapter5/5_3_2_bivariate_normal_dist.php)
    * The sum of two independent normal random variables is also normal. However, **if the two normal random variables are not independent, then their sum is not necessarily normal.**

    * If $$X$$ and $$Y$$ are **independent**, $$P(Y\|X)=P(Y) =&gt; E(XY)=E(X)E(Y) =&gt; Cov(X,Y)=E((X-E(X))(Y-E(Y)))=E(XY)-E(X)E(Y) = 0 =&gt; $$**Uncorrelated**.
    
    * If $$X$$ and $$Y$$ are uncorrelated, $$Cov(X,Y)=0 =&gt; E(XY) = E(X)E(Y) =&gt; ?$$
        * [Zero Correlation Implies Independence](http://home.iitk.ac.in/~zeeshan/pdf/The%20Bivariate%20Normal%20Distribution.pdf)
* [Why are we interested in
correlation/dependency?](https://www.actuaries.org.uk/system/files/documents/pdf/correlation.pdf)
* [Conditioning and Independence](https://www.probabilitycourse.com/chapter5/5_2_3_conditioning_independence.php)

* [Positive semi-definite]()
* [Eigen vectors and Diagonalisation]()
* [Eigen values and Determinant]()

* [Mahalanobis distance]()
    * Transformation/projection to the orthogonal space, where one axis is an independent normal distribution
    * One each axis: compute the distance $$\frac{(x-u)^T(x-u)}{\sigma^2}$$
    * Summarise all the distances of all axises. 
{:.message}

### Probabilistic view of the world
* Basic concepts/terms
    * Covariance and correlation 
    * Bivariate Normal Distribution
    * The sum of two **independent** normal distributions
    * Distance = $$num \times standard~deviation$$
        =&gt; Mahalanobis distance
    * Diagonalisation (Orthogonal, Making them independent) =&gt;  Decorrelation
        * In this context, uncorrelation = independence. 
    
* Uncorrelation (Orthogonalisaion) using Eigen vectors 
    * **Projection of a normal distribtion** $$ X \sim \mathcal{N}(0,\,{\sigma_x}^2)$$ to a standard normal distribution $$ \mathcal{N}(0,\,1)$$: 
        * **the projected distribution** is $$\mathcal{N}(0,\,\{\cos(\theta) \times \sigma_x \times 1\}^2)$$
        * $$\theta$$ determines their linear dependency: correlation coefficient=$$\cos(\theta)$$. 
        
    * For each eigen vector: **we project all the original variables to this eigen vector** (an axis in the transformed orthogonal space) =&gt; summarise/accumulate those projected variables in this axis =&gt; New variable 

        * Two accumulated projected new variables of two axises (eigen vectors) are uncorrelated (being independent now).

        * Eigen value = sum of projected standard deviation.

    * Eigen vectors are orthogonal, serving as independent axises where independent variables lie in. 
        * Diagonal covariance matrix: each entry is the square of eigen value.
        * Eigen value = sum of projected standard deviation.
        * **Projection of a normal distribtion**
            * **the projected distribution** is $$\mathcal{N}(0,\,\{\cos(\theta) \times \sigma_x \times 1\}^2)$$

* [Mahalanobis distance](https://en.wikipedia.org/wiki/Mahalanobis_distance)
    * [Distance is not always what it seems](https://blogs.sas.com/content/iml/2012/02/15/what-is-mahalanobis-distance.html)
    * [Detecting outliers in SAS: Part 3: Multivariate location and scatter &amp; MCD: Robust estimation by subsampling](https://blogs.sas.com/content/iml/2012/02/02/detecting-outliers-in-sas-part-3-multivariate-location-and-scatter.html)
    * [Sum of normally distributed random variables-Independent random variables](https://en.wikipedia.org/wiki/Sum_of_normally_distributed_random_variables)
    * [Outlier, Anomaly, and Adversaries Detection using Mahalanobis distance](https://github.com.cnpmjs.org/XinshaoAmosWang/DerivativeManipulation/blob/master/OutlierDetection_RobustInference.pptx.pdf)
    * The Mahalanobis distance is a measure of the **distance between a point $$\mathrm{P}$$ and a distribution $$\mathbf{D}$$.**
    It is a multi-dimensional generalization of the idea of measuring how many standard deviations away P is from the mean of D. This distance is zero if P is at the mean of D, and grows as P moves away from the mean along **each principal component axis.** 
        * If each of these axes is re-scaled to have unit variance, then the Mahalanobis distance corresponds to standard Euclidean distance in the transformed space. 
        * The Mahalanobis distance is thus unitless and scale-invariant, and takes into account the correlations of the data set. 
    * Mahalanobis distance is proportional, for a normal distribution, to the square root of the negative log likelihood (after adding a constant so the minimum is at zero).
    * This intuitive approach can be made quantitative by defining **the normalized distance between the test point and the set to be $${\displaystyle {x-\mu } \over \sigma } $$**. By plugging this into the normal distribution we can derive the probability of the test point belonging to the set.
    * Were the distribution to be decidedly non-spherical, for instance ellipsoidal, then we would expect the probability of the test point belonging to the set to depend not only on the distance from the center of mass, but also on the direction. In those directions where the ellipsoid has a short axis the test point must be closer, while in those where the axis is long the test point can be further away from the center.
    * The Mahalanobis distance is the distance of the test point from the center of mass **divided by the width of the ellipsoid in the direction of the test point.** (distance normalisation)
* [Maximum likelihood estimation](https://en.wikipedia.org/wiki/Maximum_likelihood_estimation)

* [Properties of the Covariance Matrix](http://www.robots.ox.ac.uk/~davidc/pubs/tt2015_dac1.pdf)

* [Differential entropy](https://en.wikipedia.org/wiki/Differential_entropy)

* [What does Determinant of Covariance Matrix give](https://math.stackexchange.com/questions/889425/what-does-determinant-of-covariance-matrix-give)

* [Why do we use the determinant of the covariance matrix when using the multivariate normal?](https://stats.stackexchange.com/questions/89952/why-do-we-use-the-determinant-of-the-covariance-matrix-when-using-the-multivaria)
{:.message}

### Optimisation
* [Concave function](https://en.wikipedia.org/wiki/Concave_function)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">SGD &amp;amp; Newton’s Method &amp;amp; Second-order Derivative Optimisation Linear algebra Probabilistic view of the world Optimisation</summary></entry><entry><title type="html">Papers Related to My PhD Thesis-Example Weighting in Classification and Distance Metric Learning</title><link href="http://localhost:4000/paperlists/2020-02-24-ThesisRelatedPapers/" rel="alternate" type="text/html" title="Papers Related to My PhD Thesis-Example Weighting in Classification and Distance Metric Learning" /><published>2020-02-24T00:00:00+00:00</published><updated>2020-02-24T00:00:00+00:00</updated><id>http://localhost:4000/paperlists/ThesisRelatedPapers</id><content type="html" xml:base="http://localhost:4000/paperlists/2020-02-24-ThesisRelatedPapers/">0. [Learning to Retrieve](#distance-metric-learning-learning-to-retrieve)
0. [Learning to Classify ](#learning-to-classify)
0. [Others](#others)
{:.message}

## Distance Metric Learning: Learning to Retrieve 
* [Active Ordinal Querying for Tuplewise Similarity Learning](https://arxiv.org/pdf/1910.04115.pdf) 
* [Representation Learning with
Contrastive Predictive Coding](https://arxiv.org/pdf/1807.03748.pdf)
{:.message}



## Learning to Classify 
* 
{:.message}



## Others 
* [A general and Adaptive Robust Loss Function-CVPR 2019 Best Paper Finalist]()
* [Unsupervised Embedding Learning via Invariant and Spreading Instance Feature-CVPR 2019]()
* [Regularising Deep Neural Networks by Noise: Its Interpretation and Optimisation-NeurIPS 2017]()
* [Toward Robustness against Label Noise in Training Deep Discriminative Neural Networks-NeurIPS 2017]()
* [Selfie: Refurbishing Unclean Samples for Robust Deep Learning-ICML 2019]()
* [Unsupervised Label Noise Modeling and Loss Correction-ICML 2019]()
* [Using Trusted Data to Train Deep Networks on Labels Corrupted by Severe Noise-NeurIPS 2018]()

## Example Weighting
* [Weighted Machine Learning-Mahdi Hashemi∗, Hassan A. Karimi](https://www.researchgate.net/publication/328731166_Weighted_Machine_Learning)
* [Not All Samples Are Created Equal: Deep Learning with Importance Sampling-Angelos Katharopoulos, Franc¸ois Fleuret, ICML 2018](http://proceedings.mlr.press/v80/katharopoulos18a.html)
    * computing the importance score for the whole
dataset is still prohibitive and would render the method
unsuitable for online learning.
    * In order to solve the problem of computing the importance for the whole dataset, we pre-sample a large batch of data points, compute the sampling distribution for that batch and re-sample a smaller batch with replacement. 
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">Learning to Retrieve Learning to Classify Others</summary></entry><entry><title type="html">Learning Bayesian Deep Learning, Uncertainty &amp;amp; Variational Techniques</title><link href="http://localhost:4000/blogs/2020-02-21-learn-bayesian-DL/" rel="alternate" type="text/html" title="Learning Bayesian Deep Learning, Uncertainty &amp; Variational Techniques" /><published>2020-02-21T00:00:00+00:00</published><updated>2020-02-21T00:00:00+00:00</updated><id>http://localhost:4000/blogs/learn-bayesian-DL</id><content type="html" xml:base="http://localhost:4000/blogs/2020-02-21-learn-bayesian-DL/">0. [Blogs](#blogs)
0. [Papers on Theories](#papers-on-theories)
0. [Papers on Applications](#papers-on-applications)
{:.message}


### What am I working on now? Discussions are Welcome!
* [Interpreting $$ p(y\|x) $$ and modelling example weighting](../2020-02-18-code-releasing)

* Going to stop treating $$ p(y\|x) $$ as a classfication confidence metric, since it is determinstic. $$ p(y\|x) $$  is not for deciding whether certain or uncertain.


* $$ p(y\|x) $$ is good as a metric of whether x matches y, though not a good metric indicating whether x is blur or not.  

* Utilities of Uncertainties
{:.message}


### Blogs
* [Everything that Works Works Because it's Bayesian: Why Deep Nets Generalize?](https://www.inference.vc/everything-that-works-works-because-its-bayesian-2/)
* [Yann LeCun's Comments](https://www.facebook.com/yann.lecun/posts/10154058859142143)
* [YARIN GAL's PhD Thesis](http://mlg.eng.cam.ac.uk/yarin/blog_2248.html?fbclid=IwAR1lNokscvPVsGFICXDQBhVa2bweIq-mkft6EfUkj9CR8tAIYJ7mNy3Qag8)
{:.message}


### Papers on Theories
* [Dropout as a Bayesian Approximation: Representing Model Uncertainty in Deep Learning-ICML 2016-YARIN GAL](https://arxiv.org/pdf/1506.02142.pdf)
* [YARIN GAL's PhD Thesis](http://mlg.eng.cam.ac.uk/yarin/thesis/thesis.pdf)
* [A Bayesian Perspective on Generalization and Stochastic Gradient Descent-ICLR 2018 Google Brain-Samuel L. Smith and Quoc V. Le](https://openreview.net/forum?id=BJij4yg0Z)
* [Bayesian Deep Learning and a Probabilistic Perspective of Generalization--arXiv 2020 New York University-Andrew Gordon Wilson Pavel Izmailov](https://arxiv.org/pdf/2002.08791.pdf)
* [Sharp Minima Can Generalize For Deep Nets-ICML 2017](https://arxiv.org/pdf/1703.04933.pdf)
* [Theory of Deep Learning III: Generalization Properties of SGD](https://cbmm.mit.edu/sites/default/files/publications/CBMM-Memo-067.pdf)
* [On Large-Batch Training for Deep Learning: Generalization Gap and Sharp Minima-ICLR 2017](https://openreview.net/forum?id=H1oyRlYgg)
* [The Marginal Value of Adaptive Gradient Methods in Machine Learning-NIPS 2017](https://papers.nips.cc/paper/7003-the-marginal-value-of-adaptive-gradient-methods-in-machine-learning)
* [Stochastic Gradient Descent as Approximate Bayesian Inference-JMLR 2017](http://www.jmlr.org/papers/volume18/17-214/17-214.pdf)
* [A Variational Analysis of Stochastic Gradient Algorithms-ICML 2016](http://proceedings.mlr.press/v48/mandt16.pdf)

* [Deep Learning and the Information Bottleneck Principle](https://arxiv.org/pdf/1503.02406.pdf)
* [On the Difference Between the Information Bottleneck and the Deep Information Bottleneck](https://arxiv.org/pdf/1912.13480.pdf)
* [Mutual Information Neural Estimation](http://proceedings.mlr.press/v80/belghazi18a/belghazi18a.pdf)
{:.message}

### Papers on Applications

* [Robust Person Re-Identification by Modelling Feature Uncertainty](http://openaccess.thecvf.com/content_ICCV_2019/papers/Yu_Robust_Person_Re-Identification_by_Modelling_Feature_Uncertainty_ICCV_2019_paper.pdf)
* [Probabilistic Face Embeddings](https://arxiv.org/pdf/1904.09658.pdf)
* [Rethinking Person Re-Identification with Confidence](https://arxiv.org/pdf/1906.04692v1.pdf)
* [Learning Confidence for Out-of-Distribution Detection in Neural Networks](https://arxiv.org/pdf/1802.04865.pdf)
* [Training Confidence-calibrated Classifiers for Detecting Out-of-Distribution Samples](https://openreview.net/forum?id=ryiAv2xAZ)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">Blogs Papers on Theories Papers on Applications</summary></entry><entry><title type="html">AAAI-2020</title><link href="http://localhost:4000/paperlists/2020-02-21-AAAI/" rel="alternate" type="text/html" title="AAAI-2020" /><published>2020-02-21T00:00:00+00:00</published><updated>2020-02-21T00:00:00+00:00</updated><id>http://localhost:4000/paperlists/AAAI</id><content type="html" xml:base="http://localhost:4000/paperlists/2020-02-21-AAAI/">:+1: means being highly related to my personal research interest. 
{:.message}


## Learning to Compare and Retrieve 
* [Active Ordinal Querying for Tuplewise Similarity Learning](https://arxiv.org/pdf/1910.04115.pdf) 
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">:+1: means being highly related to my personal research interest.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/steve-harvey.jpg" /></entry><entry><title type="html">Code Releasing of My Recent Work-Derivative Manipulation</title><link href="http://localhost:4000/blogs/2020-02-18-code-releasing/" rel="alternate" type="text/html" title="Code Releasing of My Recent Work-Derivative Manipulation" /><published>2020-02-18T00:00:00+00:00</published><updated>2020-02-18T00:00:00+00:00</updated><id>http://localhost:4000/blogs/code-releasing</id><content type="html" xml:base="http://localhost:4000/blogs/2020-02-18-code-releasing/">0. [IMAE for Noise-Robust Learning: Mean Absolute Error Does Not Treat Examples Equally and Gradient Magnitude’s Variance Matters](../../my_docs/IMAE_Code_Illustration)

0. [Derivative Manipulation for General Example Weighting](../../my_docs/DM_Code_Illustration)

0. [Github Page](https://github.com/XinshaoAmosWang/DerivativeManipulation)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">IMAE for Noise-Robust Learning: Mean Absolute Error Does Not Treat Examples Equally and Gradient Magnitude’s Variance Matters</summary></entry><entry><title type="html">Usefull Common Resources/Tricks</title><link href="http://localhost:4000/blogs/2020-02-17-useful-common-resources/" rel="alternate" type="text/html" title="Usefull Common Resources/Tricks" /><published>2020-02-17T00:00:00+00:00</published><updated>2020-02-17T00:00:00+00:00</updated><id>http://localhost:4000/blogs/useful-common-resources</id><content type="html" xml:base="http://localhost:4000/blogs/2020-02-17-useful-common-resources/">0. [Useful Links on General Study](#useful-links-on-general-study)
0. [Github: Configuration of local machine to github remote](#github-configuration-of-local-machine-to-github-remote)
0. [GDrive](#gdrive)
0. [Useful links on Jekyll, Google AdSense, Markdown. ](#useful-links-on-jekyll-google-adsense-markdown)
0. [Useful links on Travel &amp; Insurance.  ](#useful-links-on-travel--insurance)
{:.message}


### Replace string in files recursively
* Simplest way to replace (all files, directory, recursive): 
    ``` 
    find . -type f -not -path '*/\.*' -exec sed -i 's/Previous string/New string/g' {} + 
    ```
* Note: Sometimes you might need to ignore some hidden files i.e. .git, you can use above command.
If you want to include hidden files use,
```
find . -type f  -exec sed -i 's/Previous string/New string/g' {} +
```
{:.message}


### Useful Links on General Study
* Information about probabilistic models of cognition
  * [Tom's Bayesian reading list](http://cocosci.princeton.edu/tom/bayes.html)

...[http://cocosci.princeton.edu/resources.php](http://cocosci.princeton.edu/resources.php)
{:.message}


### Useful links on Jekyll, Google AdSense, Markdown. 
* [Add Google AdSense to a Jekyll website](https://mycyberuniverse.com/en-gb/add-google-adsense-to-a-jekyll-website.html)
* [AdSense Jekyll + Github](http://www.lewisgavin.co.uk/Google-Analytics-Adsense/)

* [Jekyll Variables](https://jekyllrb.com/docs/variables/)

* [Add Google Analytics](https://michaelsoolee.com/google-analytics-jekyll/)
{:.message}



### Useful links on Travel &amp; Insurance. 
* [Collecting Avios](https://www.britishairways.com/en-gb/executive-club/collecting-avios)

* [Virgin: What's covered](https://uk.virginmoney.com/virgin/travel-insurance/whats-covered.jsp)

* [AIG](https://www.aig.com.cn/individuals/travel-insurance?utm_source=baidu&amp;utm_campaign=%E9%80%9A%E7%94%A8%E8%AF%8D%2D%E6%97%85%E8%A1%8C%E9%99%A9&amp;utm_adgroup=%E9%80%9A%E7%94%A8%2D%E6%97%85%E6%B8%B8%E9%99%A9&amp;utm_term=%E6%97%85%E8%A1%8C%E4%BF%9D%E9%99%A9&amp;utm_medium=search%5Fcpc&amp;utm_channel=baidu%5Fpc&amp;utm_content=tyc&amp;bd_vid=10708153713933454488)

* [京东安联](https://www.allianz360.com/?media=d4cd86c5e9444316994e5a2c00fa9cd6&amp;type=1)

* [Aer Lingus: Dublin T2 =&gt; London Heathrow](https://www.aerlingus.com/html/flightSearchResult.html#/fareType=ONEWAY&amp;fareCategory=ECONOMY&amp;promoCode=&amp;numAdults=1&amp;numChildren=0&amp;numInfants=0&amp;groupBooking=false&amp;sourceAirportCode_0=DUB&amp;destinationAirportCode_0=LHR&amp;departureDate_0=2019-10-19&amp;flightCode_0=EI168)
{:.message}


### GDrive
* [GDrive Github](https://github.com/gdrive-org/gdrive)

* [List Folder, Root](https://github.com/gdrive-org/gdrive/issues/116)

* [Download entire folder](https://askubuntu.com/questions/867284/using-gdrive-to-download-entire-folder)

* [How to use GDrive in linux?](http://www.linuxandubuntu.com/home/google-drive-cli-client-for-linux)
{:.message}


### Github: Configuration of local machine to github remote
* [Local: Generating a new ssh key](https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key)


* [Local: Adding your new SSH key to the ssh-agent](https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent)


* [Remote: Adding your new SSH key to your GitHub account](https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account)


* [Common commands](https://github.com/XinshaoAmosWang/Deep-Metric-Embedding/blob/master/common_git.md)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">Useful Links on General Study Github: Configuration of local machine to github remote GDrive Useful links on Jekyll, Google AdSense, Markdown. Useful links on Travel &amp;amp; Insurance.</summary></entry><entry><title type="html">arXiv-2020</title><link href="http://localhost:4000/paperlists/2020-02-16-arXiv/" rel="alternate" type="text/html" title="arXiv-2020" /><published>2020-02-16T00:00:00+00:00</published><updated>2020-02-16T00:00:00+00:00</updated><id>http://localhost:4000/paperlists/arXiv</id><content type="html" xml:base="http://localhost:4000/paperlists/2020-02-16-arXiv/">0. [Noisy labels ](#noisy-labels)
0. [Active Learning](#active-learning)
0. [Foundation of Deep Learning](#foundation-of-deep-learning)

:+1: means being highly related to my personal research interest. 
{:.message}


## Foundation of Deep Learning 
* [Neural Bayes: A Generic Parameterization Method for Unsupervised Representation Learning](https://arxiv.org/pdf/2002.09046.pdf)

* [A Simple Framework for Contrastive Learning of Visual Representations](https://arxiv.org/pdf/2002.05709.pdf)
    * Data augmentation: composition of data augmentations plays a critical role in defining effective predictive tasks;
    * Auxiliary transformation:  introducing a learnable nonlinear transformation between the representation and the contrastive loss substantially improves the quality of the learned representations;
    * Larger batch size and more training steps: contrastive learning benefits from larger batch sizes and more training steps compared to supervised learning.
    * Results: By combining these findings, we are able to considerably outperform previous methods for self-supervised and semi-supervised learning on ImageNet. A linear classifier trained on self-supervised representations learned by SimCLR achieves 76.5% top-1 accuracy.


* [Instance Cross Entropy for Deep Metric Learning](https://arxiv.org/pdf/1911.09976.pdf) and its application in SimCLR-A Simple Framework for Contrastive Learning of Visual Representations

    * I am very glad to highlight that:  our proposed ICE is simple and effective, which has also been demonstrated in recent work SimCLR, in the context of self-supervised learning: A Simple Framework for Contrastive Learning of Visual Representations

    * Its loss expression NT-Xent (the normalized temperature-scaled cross entropy loss) is a fantastic application of our recently proposed Instance Cross Entropy for Deep Metric Learning,  in the context of self-supervised learnining. I am very excited about this.
        * #InstanceCrossEntropy #TemperatureScaling #RepresentationLearning
    * [Research Gate](https://www.researchgate.net/publication/337485049_Instance_Cross_Entropy_for_Deep_Metric_Learning/comments)
    * [Open Review](https://openreview.net/forum?id=BJeguTEKDB&amp;noteId=txrrkCL-sXhttps://openreview.net/forum?id=BJeguTEKDB&amp;noteId=txrrkCL-sX)
    * [Reddit](https://www.reddit.com/r/MachineLearning/comments/f4x1sh/r_instance_cross_entropy_for_deep_metric_learning/)
* [Unsupervised Embedding Learning via Invariant and Spreading Instance Feature](https://arxiv.org/pdf/1904.03436.pdf)
    * Unsupervised Embedding Learning via Invariant and SpreadingInstance Feature is even closer, also in the context of self-supervised learning, maximising the agreement over augmentations of one instance.
    * [ Instance Cross Entropy for Deep Metric Learning](https://arxiv.org/pdf/1911.09976.pdf) is in the context of supervised discriminative representation learning, maximising the agreement over augmentaions of multiple images i.e. a class.

* [ICLR 2019: Learning deep representations by mutual information estimation and maximization](https://xinshaoamoswang.github.io/Papers/AnomalyAndRegularisation/#iclr-2019-learning-deep-representations-by-mutual-information-estimation-and-maximization) 
{:.message}



## Noisy labels 
* [Learning Adaptive Loss for Robust Learning with Noisy Labels](https://arxiv.org/pdf/2002.06482.pdf)
* [DivideMix: Learning with Noisy Labels as Semi-supervised Learning](https://openreview.net/forum?id=HJgExaVtwr)
* [Group-Teaching: Learning Robust CNNs From Extremely Noisy Labels](https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=9001093)
* []
{:.message}

## Active Learning
* [Learning Active Learning from Data](https://papers.nips.cc/paper/7010-learning-active-learning-from-data.pdf)
{:.message}</content><author><name>Xinshao (Amos) Wang</name><email>xwang at qub dot ac dot uk xwang at qub dot ac dot uk</email></author><summary type="html">Noisy labels Active Learning Foundation of Deep Learning</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/blog/steve-harvey.jpg" /></entry></feed>